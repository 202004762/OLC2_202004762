//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AnalizadorLexico.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Proyecto_1.AnalizadorLexico {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAnalizadorLexicoListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class AnalizadorLexicoBaseListener : IAnalizadorLexicoListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.inicio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInicio([NotNull] AnalizadorLexicoParser.InicioContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.inicio"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInicio([NotNull] AnalizadorLexicoParser.InicioContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.listaInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListaInstr([NotNull] AnalizadorLexicoParser.ListaInstrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.listaInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListaInstr([NotNull] AnalizadorLexicoParser.ListaInstrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion([NotNull] AnalizadorLexicoParser.InstruccionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion([NotNull] AnalizadorLexicoParser.InstruccionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrint([NotNull] AnalizadorLexicoParser.PrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.print"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrint([NotNull] AnalizadorLexicoParser.PrintContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionVar([NotNull] AnalizadorLexicoParser.DeclaracionVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionVar([NotNull] AnalizadorLexicoParser.DeclaracionVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSliceVacio</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionSliceVacio([NotNull] AnalizadorLexicoParser.DeclaracionSliceVacioContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSliceVacio</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionSliceVacio([NotNull] AnalizadorLexicoParser.DeclaracionSliceVacioContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSliceLleno</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclaracionSliceLleno([NotNull] AnalizadorLexicoParser.DeclaracionSliceLlenoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSliceLleno</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclaracionSliceLleno([NotNull] AnalizadorLexicoParser.DeclaracionSliceLlenoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>asignacionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignacionVar([NotNull] AnalizadorLexicoParser.AsignacionVarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>asignacionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignacionVar([NotNull] AnalizadorLexicoParser.AsignacionVarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>asignacionIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignacionIncremento([NotNull] AnalizadorLexicoParser.AsignacionIncrementoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>asignacionIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignacionIncremento([NotNull] AnalizadorLexicoParser.AsignacionIncrementoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>asignacionSlice</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsignacionSlice([NotNull] AnalizadorLexicoParser.AsignacionSliceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>asignacionSlice</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsignacionSlice([NotNull] AnalizadorLexicoParser.AsignacionSliceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>append</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAppend([NotNull] AnalizadorLexicoParser.AppendContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>append</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAppend([NotNull] AnalizadorLexicoParser.AppendContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sliceUpdate</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceUpdate([NotNull] AnalizadorLexicoParser.SliceUpdateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sliceUpdate</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceUpdate([NotNull] AnalizadorLexicoParser.SliceUpdateContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>incrementoDecremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIncrementoDecremento([NotNull] AnalizadorLexicoParser.IncrementoDecrementoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>incrementoDecremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIncrementoDecremento([NotNull] AnalizadorLexicoParser.IncrementoDecrementoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTipo([NotNull] AnalizadorLexicoParser.TipoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.tipo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTipo([NotNull] AnalizadorLexicoParser.TipoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion_if([NotNull] AnalizadorLexicoParser.Instruccion_ifContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_if"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion_if([NotNull] AnalizadorLexicoParser.Instruccion_ifContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_ifelse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion_ifelse([NotNull] AnalizadorLexicoParser.Instruccion_ifelseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_ifelse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion_ifelse([NotNull] AnalizadorLexicoParser.Instruccion_ifelseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion_else([NotNull] AnalizadorLexicoParser.Instruccion_elseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_else"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion_else([NotNull] AnalizadorLexicoParser.Instruccion_elseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_switch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion_switch([NotNull] AnalizadorLexicoParser.Instruccion_switchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_switch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion_switch([NotNull] AnalizadorLexicoParser.Instruccion_switchContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.lista_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLista_case([NotNull] AnalizadorLexicoParser.Lista_caseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.lista_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLista_case([NotNull] AnalizadorLexicoParser.Lista_caseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion_case([NotNull] AnalizadorLexicoParser.Instruccion_caseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion_case([NotNull] AnalizadorLexicoParser.Instruccion_caseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_default"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion_default([NotNull] AnalizadorLexicoParser.Instruccion_defaultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_default"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion_default([NotNull] AnalizadorLexicoParser.Instruccion_defaultContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>forNormal</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForNormal([NotNull] AnalizadorLexicoParser.ForNormalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forNormal</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForNormal([NotNull] AnalizadorLexicoParser.ForNormalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>forIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForIncremento([NotNull] AnalizadorLexicoParser.ForIncrementoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForIncremento([NotNull] AnalizadorLexicoParser.ForIncrementoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>forRange</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForRange([NotNull] AnalizadorLexicoParser.ForRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>forRange</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForRange([NotNull] AnalizadorLexicoParser.ForRangeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_funcion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstruccion_funcion([NotNull] AnalizadorLexicoParser.Instruccion_funcionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_funcion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstruccion_funcion([NotNull] AnalizadorLexicoParser.Instruccion_funcionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.llamada_funcion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLlamada_funcion([NotNull] AnalizadorLexicoParser.Llamada_funcionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.llamada_funcion"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLlamada_funcion([NotNull] AnalizadorLexicoParser.Llamada_funcionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.lista_parametros"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLista_parametros([NotNull] AnalizadorLexicoParser.Lista_parametrosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.lista_parametros"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLista_parametros([NotNull] AnalizadorLexicoParser.Lista_parametrosContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.lista_argumentos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLista_argumentos([NotNull] AnalizadorLexicoParser.Lista_argumentosContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.lista_argumentos"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLista_argumentos([NotNull] AnalizadorLexicoParser.Lista_argumentosContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.breakInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBreakInstr([NotNull] AnalizadorLexicoParser.BreakInstrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.breakInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBreakInstr([NotNull] AnalizadorLexicoParser.BreakInstrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.continueInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterContinueInstr([NotNull] AnalizadorLexicoParser.ContinueInstrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.continueInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitContinueInstr([NotNull] AnalizadorLexicoParser.ContinueInstrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.returnInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnInstr([NotNull] AnalizadorLexicoParser.ReturnInstrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.returnInstr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnInstr([NotNull] AnalizadorLexicoParser.ReturnInstrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExpresion([NotNull] AnalizadorLexicoParser.BooleanExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExpresion([NotNull] AnalizadorLexicoParser.BooleanExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>strconvParseFloat</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStrconvParseFloat([NotNull] AnalizadorLexicoParser.StrconvParseFloatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>strconvParseFloat</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStrconvParseFloat([NotNull] AnalizadorLexicoParser.StrconvParseFloatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeOf</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeOf([NotNull] AnalizadorLexicoParser.TypeOfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeOf</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeOf([NotNull] AnalizadorLexicoParser.TypeOfContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorLogico</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperadorLogico([NotNull] AnalizadorLexicoParser.OperadorLogicoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorLogico</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperadorLogico([NotNull] AnalizadorLexicoParser.OperadorLogicoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>expreParentesis</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpreParentesis([NotNull] AnalizadorLexicoParser.ExpreParentesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>expreParentesis</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpreParentesis([NotNull] AnalizadorLexicoParser.ExpreParentesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdExpresion([NotNull] AnalizadorLexicoParser.IdExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdExpresion([NotNull] AnalizadorLexicoParser.IdExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sliceAccess</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceAccess([NotNull] AnalizadorLexicoParser.SliceAccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sliceAccess</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceAccess([NotNull] AnalizadorLexicoParser.SliceAccessContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ejecutarFunciones</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEjecutarFunciones([NotNull] AnalizadorLexicoParser.EjecutarFuncionesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ejecutarFunciones</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEjecutarFunciones([NotNull] AnalizadorLexicoParser.EjecutarFuncionesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>strconvAtoi</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStrconvAtoi([NotNull] AnalizadorLexicoParser.StrconvAtoiContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>strconvAtoi</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStrconvAtoi([NotNull] AnalizadorLexicoParser.StrconvAtoiContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>stringsJoin</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStringsJoin([NotNull] AnalizadorLexicoParser.StringsJoinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>stringsJoin</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStringsJoin([NotNull] AnalizadorLexicoParser.StringsJoinContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperadorNegacion([NotNull] AnalizadorLexicoParser.OperadorNegacionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperadorNegacion([NotNull] AnalizadorLexicoParser.OperadorNegacionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaracterExpresion([NotNull] AnalizadorLexicoParser.CaracterExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaracterExpresion([NotNull] AnalizadorLexicoParser.CaracterExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>decimalExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDecimalExpresion([NotNull] AnalizadorLexicoParser.DecimalExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>decimalExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDecimalExpresion([NotNull] AnalizadorLexicoParser.DecimalExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNilExpresion([NotNull] AnalizadorLexicoParser.NilExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNilExpresion([NotNull] AnalizadorLexicoParser.NilExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sliceIndex</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSliceIndex([NotNull] AnalizadorLexicoParser.SliceIndexContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sliceIndex</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSliceIndex([NotNull] AnalizadorLexicoParser.SliceIndexContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCadenaExpresion([NotNull] AnalizadorLexicoParser.CadenaExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCadenaExpresion([NotNull] AnalizadorLexicoParser.CadenaExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>len</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLen([NotNull] AnalizadorLexicoParser.LenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>len</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLen([NotNull] AnalizadorLexicoParser.LenContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicacionYdivision</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicacionYdivision([NotNull] AnalizadorLexicoParser.MultiplicacionYdivisionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicacionYdivision</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicacionYdivision([NotNull] AnalizadorLexicoParser.MultiplicacionYdivisionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntExpresion([NotNull] AnalizadorLexicoParser.IntExpresionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntExpresion([NotNull] AnalizadorLexicoParser.IntExpresionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorRelacional</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperadorRelacional([NotNull] AnalizadorLexicoParser.OperadorRelacionalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorRelacional</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperadorRelacional([NotNull] AnalizadorLexicoParser.OperadorRelacionalContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorNegativo</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperadorNegativo([NotNull] AnalizadorLexicoParser.OperadorNegativoContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorNegativo</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperadorNegativo([NotNull] AnalizadorLexicoParser.OperadorNegativoContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>sumaYresta</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSumaYresta([NotNull] AnalizadorLexicoParser.SumaYrestaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>sumaYresta</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSumaYresta([NotNull] AnalizadorLexicoParser.SumaYrestaContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Proyecto_1.AnalizadorLexico
