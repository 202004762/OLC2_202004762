//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AnalizadorLexico.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Proyecto_1.AnalizadorLexico {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class AnalizadorLexicoLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, LINEA=44, MULTILINEA=45, 
		NEWLINE=46, INT=47, DECIMAL=48, CADENA=49, CARACTER=50, BOOL=51, NIL=52, 
		ID=53, IGUAL=54, DPIGUAL=55, PARIZQ=56, PARDER=57, LLAVEIZQ=58, LLAVEDER=59, 
		CORIZQ=60, CORDER=61, COMA=62, INCRE=63, DECRE=64;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "LINEA", "MULTILINEA", "NEWLINE", "INT", "DECIMAL", 
		"CADENA", "CARACTER", "BOOL", "NIL", "ID", "IGUAL", "DPIGUAL", "PARIZQ", 
		"PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ", "CORDER", "COMA", "INCRE", 
		"DECRE"
	};


	public AnalizadorLexicoLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AnalizadorLexicoLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'fmt.Println'", "'var'", "'+='", "'-='", "'append'", "'int'", "'float64'", 
		"'string'", "'bool'", "'rune'", "'if'", "'else'", "'switch'", "'case'", 
		"':'", "'default'", "'for'", "';'", "'range'", "'func'", "'break'", "'continue'", 
		"'return'", "'!'", "'-'", "'*'", "'/'", "'%'", "'+'", "'>='", "'>'", "'<='", 
		"'<'", "'=='", "'!='", "'&&'", "'||'", "'slices.Index'", "'strings.Join'", 
		"'len'", "'strconv.Atoi'", "'strconv.ParseFloat'", "'reflect.TypeOf'", 
		null, null, null, null, null, null, null, null, "'nil'", null, "'='", 
		"':='", "'('", "')'", "'{'", "'}'", "'['", "']'", "','", "'++'", "'--'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "LINEA", "MULTILINEA", 
		"NEWLINE", "INT", "DECIMAL", "CADENA", "CARACTER", "BOOL", "NIL", "ID", 
		"IGUAL", "DPIGUAL", "PARIZQ", "PARDER", "LLAVEIZQ", "LLAVEDER", "CORIZQ", 
		"CORDER", "COMA", "INCRE", "DECRE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "AnalizadorLexico.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static AnalizadorLexicoLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,64,482,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,
		2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,6,
		1,6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,
		8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,12,
		1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,15,
		1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,18,
		1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,
		1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,
		1,22,1,22,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
		1,28,1,28,1,29,1,29,1,29,1,30,1,30,1,31,1,31,1,31,1,32,1,32,1,33,1,33,
		1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,37,
		1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,
		1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,
		1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,
		1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
		1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,1,42,
		1,42,1,42,1,42,1,43,1,43,1,43,1,43,5,43,372,8,43,10,43,12,43,375,9,43,
		1,43,1,43,1,44,1,44,1,44,1,44,5,44,383,8,44,10,44,12,44,386,9,44,1,44,
		1,44,1,44,1,44,1,44,1,45,4,45,394,8,45,11,45,12,45,395,1,45,1,45,1,46,
		4,46,401,8,46,11,46,12,46,402,1,47,4,47,406,8,47,11,47,12,47,407,1,47,
		1,47,4,47,412,8,47,11,47,12,47,413,1,48,1,48,1,48,1,48,1,48,5,48,421,8,
		48,10,48,12,48,424,9,48,1,48,1,48,1,49,1,49,1,49,1,49,3,49,432,8,49,1,
		49,1,49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,3,50,445,8,50,1,51,
		1,51,1,51,1,51,1,52,1,52,5,52,453,8,52,10,52,12,52,456,9,52,1,53,1,53,
		1,54,1,54,1,54,1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,
		1,60,1,61,1,61,1,62,1,62,1,62,1,63,1,63,1,63,1,384,0,64,1,1,3,2,5,3,7,
		4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
		17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,
		29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,
		41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,52,
		105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,62,
		125,63,127,64,1,0,8,2,0,10,10,13,13,3,0,9,10,13,13,32,32,1,0,48,57,2,0,
		34,34,92,92,4,0,10,10,13,13,39,39,92,92,6,0,34,34,39,39,92,92,110,110,
		114,114,116,116,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,493,0,1,
		1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,
		13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,
		0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,
		0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,
		1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,
		0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,
		1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
		0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,
		1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,
		0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,
		0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,
		0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,1,129,1,0,0,
		0,3,141,1,0,0,0,5,145,1,0,0,0,7,148,1,0,0,0,9,151,1,0,0,0,11,158,1,0,0,
		0,13,162,1,0,0,0,15,170,1,0,0,0,17,177,1,0,0,0,19,182,1,0,0,0,21,187,1,
		0,0,0,23,190,1,0,0,0,25,195,1,0,0,0,27,202,1,0,0,0,29,207,1,0,0,0,31,209,
		1,0,0,0,33,217,1,0,0,0,35,221,1,0,0,0,37,223,1,0,0,0,39,229,1,0,0,0,41,
		234,1,0,0,0,43,240,1,0,0,0,45,249,1,0,0,0,47,256,1,0,0,0,49,258,1,0,0,
		0,51,260,1,0,0,0,53,262,1,0,0,0,55,264,1,0,0,0,57,266,1,0,0,0,59,268,1,
		0,0,0,61,271,1,0,0,0,63,273,1,0,0,0,65,276,1,0,0,0,67,278,1,0,0,0,69,281,
		1,0,0,0,71,284,1,0,0,0,73,287,1,0,0,0,75,290,1,0,0,0,77,303,1,0,0,0,79,
		316,1,0,0,0,81,320,1,0,0,0,83,333,1,0,0,0,85,352,1,0,0,0,87,367,1,0,0,
		0,89,378,1,0,0,0,91,393,1,0,0,0,93,400,1,0,0,0,95,405,1,0,0,0,97,415,1,
		0,0,0,99,427,1,0,0,0,101,444,1,0,0,0,103,446,1,0,0,0,105,450,1,0,0,0,107,
		457,1,0,0,0,109,459,1,0,0,0,111,462,1,0,0,0,113,464,1,0,0,0,115,466,1,
		0,0,0,117,468,1,0,0,0,119,470,1,0,0,0,121,472,1,0,0,0,123,474,1,0,0,0,
		125,476,1,0,0,0,127,479,1,0,0,0,129,130,5,102,0,0,130,131,5,109,0,0,131,
		132,5,116,0,0,132,133,5,46,0,0,133,134,5,80,0,0,134,135,5,114,0,0,135,
		136,5,105,0,0,136,137,5,110,0,0,137,138,5,116,0,0,138,139,5,108,0,0,139,
		140,5,110,0,0,140,2,1,0,0,0,141,142,5,118,0,0,142,143,5,97,0,0,143,144,
		5,114,0,0,144,4,1,0,0,0,145,146,5,43,0,0,146,147,5,61,0,0,147,6,1,0,0,
		0,148,149,5,45,0,0,149,150,5,61,0,0,150,8,1,0,0,0,151,152,5,97,0,0,152,
		153,5,112,0,0,153,154,5,112,0,0,154,155,5,101,0,0,155,156,5,110,0,0,156,
		157,5,100,0,0,157,10,1,0,0,0,158,159,5,105,0,0,159,160,5,110,0,0,160,161,
		5,116,0,0,161,12,1,0,0,0,162,163,5,102,0,0,163,164,5,108,0,0,164,165,5,
		111,0,0,165,166,5,97,0,0,166,167,5,116,0,0,167,168,5,54,0,0,168,169,5,
		52,0,0,169,14,1,0,0,0,170,171,5,115,0,0,171,172,5,116,0,0,172,173,5,114,
		0,0,173,174,5,105,0,0,174,175,5,110,0,0,175,176,5,103,0,0,176,16,1,0,0,
		0,177,178,5,98,0,0,178,179,5,111,0,0,179,180,5,111,0,0,180,181,5,108,0,
		0,181,18,1,0,0,0,182,183,5,114,0,0,183,184,5,117,0,0,184,185,5,110,0,0,
		185,186,5,101,0,0,186,20,1,0,0,0,187,188,5,105,0,0,188,189,5,102,0,0,189,
		22,1,0,0,0,190,191,5,101,0,0,191,192,5,108,0,0,192,193,5,115,0,0,193,194,
		5,101,0,0,194,24,1,0,0,0,195,196,5,115,0,0,196,197,5,119,0,0,197,198,5,
		105,0,0,198,199,5,116,0,0,199,200,5,99,0,0,200,201,5,104,0,0,201,26,1,
		0,0,0,202,203,5,99,0,0,203,204,5,97,0,0,204,205,5,115,0,0,205,206,5,101,
		0,0,206,28,1,0,0,0,207,208,5,58,0,0,208,30,1,0,0,0,209,210,5,100,0,0,210,
		211,5,101,0,0,211,212,5,102,0,0,212,213,5,97,0,0,213,214,5,117,0,0,214,
		215,5,108,0,0,215,216,5,116,0,0,216,32,1,0,0,0,217,218,5,102,0,0,218,219,
		5,111,0,0,219,220,5,114,0,0,220,34,1,0,0,0,221,222,5,59,0,0,222,36,1,0,
		0,0,223,224,5,114,0,0,224,225,5,97,0,0,225,226,5,110,0,0,226,227,5,103,
		0,0,227,228,5,101,0,0,228,38,1,0,0,0,229,230,5,102,0,0,230,231,5,117,0,
		0,231,232,5,110,0,0,232,233,5,99,0,0,233,40,1,0,0,0,234,235,5,98,0,0,235,
		236,5,114,0,0,236,237,5,101,0,0,237,238,5,97,0,0,238,239,5,107,0,0,239,
		42,1,0,0,0,240,241,5,99,0,0,241,242,5,111,0,0,242,243,5,110,0,0,243,244,
		5,116,0,0,244,245,5,105,0,0,245,246,5,110,0,0,246,247,5,117,0,0,247,248,
		5,101,0,0,248,44,1,0,0,0,249,250,5,114,0,0,250,251,5,101,0,0,251,252,5,
		116,0,0,252,253,5,117,0,0,253,254,5,114,0,0,254,255,5,110,0,0,255,46,1,
		0,0,0,256,257,5,33,0,0,257,48,1,0,0,0,258,259,5,45,0,0,259,50,1,0,0,0,
		260,261,5,42,0,0,261,52,1,0,0,0,262,263,5,47,0,0,263,54,1,0,0,0,264,265,
		5,37,0,0,265,56,1,0,0,0,266,267,5,43,0,0,267,58,1,0,0,0,268,269,5,62,0,
		0,269,270,5,61,0,0,270,60,1,0,0,0,271,272,5,62,0,0,272,62,1,0,0,0,273,
		274,5,60,0,0,274,275,5,61,0,0,275,64,1,0,0,0,276,277,5,60,0,0,277,66,1,
		0,0,0,278,279,5,61,0,0,279,280,5,61,0,0,280,68,1,0,0,0,281,282,5,33,0,
		0,282,283,5,61,0,0,283,70,1,0,0,0,284,285,5,38,0,0,285,286,5,38,0,0,286,
		72,1,0,0,0,287,288,5,124,0,0,288,289,5,124,0,0,289,74,1,0,0,0,290,291,
		5,115,0,0,291,292,5,108,0,0,292,293,5,105,0,0,293,294,5,99,0,0,294,295,
		5,101,0,0,295,296,5,115,0,0,296,297,5,46,0,0,297,298,5,73,0,0,298,299,
		5,110,0,0,299,300,5,100,0,0,300,301,5,101,0,0,301,302,5,120,0,0,302,76,
		1,0,0,0,303,304,5,115,0,0,304,305,5,116,0,0,305,306,5,114,0,0,306,307,
		5,105,0,0,307,308,5,110,0,0,308,309,5,103,0,0,309,310,5,115,0,0,310,311,
		5,46,0,0,311,312,5,74,0,0,312,313,5,111,0,0,313,314,5,105,0,0,314,315,
		5,110,0,0,315,78,1,0,0,0,316,317,5,108,0,0,317,318,5,101,0,0,318,319,5,
		110,0,0,319,80,1,0,0,0,320,321,5,115,0,0,321,322,5,116,0,0,322,323,5,114,
		0,0,323,324,5,99,0,0,324,325,5,111,0,0,325,326,5,110,0,0,326,327,5,118,
		0,0,327,328,5,46,0,0,328,329,5,65,0,0,329,330,5,116,0,0,330,331,5,111,
		0,0,331,332,5,105,0,0,332,82,1,0,0,0,333,334,5,115,0,0,334,335,5,116,0,
		0,335,336,5,114,0,0,336,337,5,99,0,0,337,338,5,111,0,0,338,339,5,110,0,
		0,339,340,5,118,0,0,340,341,5,46,0,0,341,342,5,80,0,0,342,343,5,97,0,0,
		343,344,5,114,0,0,344,345,5,115,0,0,345,346,5,101,0,0,346,347,5,70,0,0,
		347,348,5,108,0,0,348,349,5,111,0,0,349,350,5,97,0,0,350,351,5,116,0,0,
		351,84,1,0,0,0,352,353,5,114,0,0,353,354,5,101,0,0,354,355,5,102,0,0,355,
		356,5,108,0,0,356,357,5,101,0,0,357,358,5,99,0,0,358,359,5,116,0,0,359,
		360,5,46,0,0,360,361,5,84,0,0,361,362,5,121,0,0,362,363,5,112,0,0,363,
		364,5,101,0,0,364,365,5,79,0,0,365,366,5,102,0,0,366,86,1,0,0,0,367,368,
		5,47,0,0,368,369,5,47,0,0,369,373,1,0,0,0,370,372,8,0,0,0,371,370,1,0,
		0,0,372,375,1,0,0,0,373,371,1,0,0,0,373,374,1,0,0,0,374,376,1,0,0,0,375,
		373,1,0,0,0,376,377,6,43,0,0,377,88,1,0,0,0,378,379,5,47,0,0,379,380,5,
		42,0,0,380,384,1,0,0,0,381,383,9,0,0,0,382,381,1,0,0,0,383,386,1,0,0,0,
		384,385,1,0,0,0,384,382,1,0,0,0,385,387,1,0,0,0,386,384,1,0,0,0,387,388,
		5,42,0,0,388,389,5,47,0,0,389,390,1,0,0,0,390,391,6,44,0,0,391,90,1,0,
		0,0,392,394,7,1,0,0,393,392,1,0,0,0,394,395,1,0,0,0,395,393,1,0,0,0,395,
		396,1,0,0,0,396,397,1,0,0,0,397,398,6,45,1,0,398,92,1,0,0,0,399,401,7,
		2,0,0,400,399,1,0,0,0,401,402,1,0,0,0,402,400,1,0,0,0,402,403,1,0,0,0,
		403,94,1,0,0,0,404,406,7,2,0,0,405,404,1,0,0,0,406,407,1,0,0,0,407,405,
		1,0,0,0,407,408,1,0,0,0,408,409,1,0,0,0,409,411,5,46,0,0,410,412,7,2,0,
		0,411,410,1,0,0,0,412,413,1,0,0,0,413,411,1,0,0,0,413,414,1,0,0,0,414,
		96,1,0,0,0,415,422,5,34,0,0,416,421,8,3,0,0,417,418,5,92,0,0,418,421,9,
		0,0,0,419,421,5,10,0,0,420,416,1,0,0,0,420,417,1,0,0,0,420,419,1,0,0,0,
		421,424,1,0,0,0,422,420,1,0,0,0,422,423,1,0,0,0,423,425,1,0,0,0,424,422,
		1,0,0,0,425,426,5,34,0,0,426,98,1,0,0,0,427,431,5,39,0,0,428,432,8,4,0,
		0,429,430,5,92,0,0,430,432,7,5,0,0,431,428,1,0,0,0,431,429,1,0,0,0,432,
		433,1,0,0,0,433,434,5,39,0,0,434,100,1,0,0,0,435,436,5,116,0,0,436,437,
		5,114,0,0,437,438,5,117,0,0,438,445,5,101,0,0,439,440,5,102,0,0,440,441,
		5,97,0,0,441,442,5,108,0,0,442,443,5,115,0,0,443,445,5,101,0,0,444,435,
		1,0,0,0,444,439,1,0,0,0,445,102,1,0,0,0,446,447,5,110,0,0,447,448,5,105,
		0,0,448,449,5,108,0,0,449,104,1,0,0,0,450,454,7,6,0,0,451,453,7,7,0,0,
		452,451,1,0,0,0,453,456,1,0,0,0,454,452,1,0,0,0,454,455,1,0,0,0,455,106,
		1,0,0,0,456,454,1,0,0,0,457,458,5,61,0,0,458,108,1,0,0,0,459,460,5,58,
		0,0,460,461,5,61,0,0,461,110,1,0,0,0,462,463,5,40,0,0,463,112,1,0,0,0,
		464,465,5,41,0,0,465,114,1,0,0,0,466,467,5,123,0,0,467,116,1,0,0,0,468,
		469,5,125,0,0,469,118,1,0,0,0,470,471,5,91,0,0,471,120,1,0,0,0,472,473,
		5,93,0,0,473,122,1,0,0,0,474,475,5,44,0,0,475,124,1,0,0,0,476,477,5,43,
		0,0,477,478,5,43,0,0,478,126,1,0,0,0,479,480,5,45,0,0,480,481,5,45,0,0,
		481,128,1,0,0,0,12,0,373,384,395,402,407,413,420,422,431,444,454,2,6,0,
		0,0,1,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace Proyecto_1.AnalizadorLexico
