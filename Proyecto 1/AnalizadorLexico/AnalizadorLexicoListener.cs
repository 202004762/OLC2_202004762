//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from AnalizadorLexico.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Proyecto_1.AnalizadorLexico {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="AnalizadorLexicoParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IAnalizadorLexicoListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.inicio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInicio([NotNull] AnalizadorLexicoParser.InicioContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.inicio"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInicio([NotNull] AnalizadorLexicoParser.InicioContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.listaInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListaInstr([NotNull] AnalizadorLexicoParser.ListaInstrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.listaInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListaInstr([NotNull] AnalizadorLexicoParser.ListaInstrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion([NotNull] AnalizadorLexicoParser.InstruccionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion([NotNull] AnalizadorLexicoParser.InstruccionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrint([NotNull] AnalizadorLexicoParser.PrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.print"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrint([NotNull] AnalizadorLexicoParser.PrintContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionVar([NotNull] AnalizadorLexicoParser.DeclaracionVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionVar([NotNull] AnalizadorLexicoParser.DeclaracionVarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSliceVacio</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionSliceVacio([NotNull] AnalizadorLexicoParser.DeclaracionSliceVacioContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSliceVacio</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionSliceVacio([NotNull] AnalizadorLexicoParser.DeclaracionSliceVacioContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionSliceLleno</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionSliceLleno([NotNull] AnalizadorLexicoParser.DeclaracionSliceLlenoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionSliceLleno</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionSlice"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionSliceLleno([NotNull] AnalizadorLexicoParser.DeclaracionSliceLlenoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>declaracionMatrizLleno</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionMatriz"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracionMatrizLleno([NotNull] AnalizadorLexicoParser.DeclaracionMatrizLlenoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>declaracionMatrizLleno</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.declaracionMatriz"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracionMatrizLleno([NotNull] AnalizadorLexicoParser.DeclaracionMatrizLlenoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.listaFilas"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListaFilas([NotNull] AnalizadorLexicoParser.ListaFilasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.listaFilas"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListaFilas([NotNull] AnalizadorLexicoParser.ListaFilasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.fila"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFila([NotNull] AnalizadorLexicoParser.FilaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.fila"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFila([NotNull] AnalizadorLexicoParser.FilaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>asignacionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignacionVar([NotNull] AnalizadorLexicoParser.AsignacionVarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asignacionVar</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignacionVar([NotNull] AnalizadorLexicoParser.AsignacionVarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>asignacionIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignacionIncremento([NotNull] AnalizadorLexicoParser.AsignacionIncrementoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asignacionIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignacionIncremento([NotNull] AnalizadorLexicoParser.AsignacionIncrementoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>asignacionSlice</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignacionSlice([NotNull] AnalizadorLexicoParser.AsignacionSliceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>asignacionSlice</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignacionSlice([NotNull] AnalizadorLexicoParser.AsignacionSliceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>append</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAppend([NotNull] AnalizadorLexicoParser.AppendContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>append</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAppend([NotNull] AnalizadorLexicoParser.AppendContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sliceUpdate</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSliceUpdate([NotNull] AnalizadorLexicoParser.SliceUpdateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sliceUpdate</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSliceUpdate([NotNull] AnalizadorLexicoParser.SliceUpdateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>incrementoDecremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncrementoDecremento([NotNull] AnalizadorLexicoParser.IncrementoDecrementoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>incrementoDecremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncrementoDecremento([NotNull] AnalizadorLexicoParser.IncrementoDecrementoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>matrizUpdate</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatrizUpdate([NotNull] AnalizadorLexicoParser.MatrizUpdateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>matrizUpdate</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatrizUpdate([NotNull] AnalizadorLexicoParser.MatrizUpdateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTipo([NotNull] AnalizadorLexicoParser.TipoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTipo([NotNull] AnalizadorLexicoParser.TipoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion_if([NotNull] AnalizadorLexicoParser.Instruccion_ifContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion_if([NotNull] AnalizadorLexicoParser.Instruccion_ifContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_ifelse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion_ifelse([NotNull] AnalizadorLexicoParser.Instruccion_ifelseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_ifelse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion_ifelse([NotNull] AnalizadorLexicoParser.Instruccion_ifelseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion_else([NotNull] AnalizadorLexicoParser.Instruccion_elseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion_else([NotNull] AnalizadorLexicoParser.Instruccion_elseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_switch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion_switch([NotNull] AnalizadorLexicoParser.Instruccion_switchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_switch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion_switch([NotNull] AnalizadorLexicoParser.Instruccion_switchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.lista_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLista_case([NotNull] AnalizadorLexicoParser.Lista_caseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.lista_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLista_case([NotNull] AnalizadorLexicoParser.Lista_caseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion_case([NotNull] AnalizadorLexicoParser.Instruccion_caseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_case"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion_case([NotNull] AnalizadorLexicoParser.Instruccion_caseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion_default([NotNull] AnalizadorLexicoParser.Instruccion_defaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_default"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion_default([NotNull] AnalizadorLexicoParser.Instruccion_defaultContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>forNormal</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForNormal([NotNull] AnalizadorLexicoParser.ForNormalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forNormal</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForNormal([NotNull] AnalizadorLexicoParser.ForNormalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>forIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForIncremento([NotNull] AnalizadorLexicoParser.ForIncrementoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forIncremento</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForIncremento([NotNull] AnalizadorLexicoParser.ForIncrementoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>forRange</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForRange([NotNull] AnalizadorLexicoParser.ForRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>forRange</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.instruccion_for"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForRange([NotNull] AnalizadorLexicoParser.ForRangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_funcion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstruccion_funcion([NotNull] AnalizadorLexicoParser.Instruccion_funcionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.instruccion_funcion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstruccion_funcion([NotNull] AnalizadorLexicoParser.Instruccion_funcionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.llamada_funcion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLlamada_funcion([NotNull] AnalizadorLexicoParser.Llamada_funcionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.llamada_funcion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLlamada_funcion([NotNull] AnalizadorLexicoParser.Llamada_funcionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.lista_parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLista_parametros([NotNull] AnalizadorLexicoParser.Lista_parametrosContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.lista_parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLista_parametros([NotNull] AnalizadorLexicoParser.Lista_parametrosContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.breakInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakInstr([NotNull] AnalizadorLexicoParser.BreakInstrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.breakInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakInstr([NotNull] AnalizadorLexicoParser.BreakInstrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.continueInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueInstr([NotNull] AnalizadorLexicoParser.ContinueInstrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.continueInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueInstr([NotNull] AnalizadorLexicoParser.ContinueInstrContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="AnalizadorLexicoParser.returnInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnInstr([NotNull] AnalizadorLexicoParser.ReturnInstrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="AnalizadorLexicoParser.returnInstr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnInstr([NotNull] AnalizadorLexicoParser.ReturnInstrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>booleanExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpresion([NotNull] AnalizadorLexicoParser.BooleanExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>booleanExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpresion([NotNull] AnalizadorLexicoParser.BooleanExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>strconvParseFloat</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrconvParseFloat([NotNull] AnalizadorLexicoParser.StrconvParseFloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>strconvParseFloat</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrconvParseFloat([NotNull] AnalizadorLexicoParser.StrconvParseFloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>TypeOf</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeOf([NotNull] AnalizadorLexicoParser.TypeOfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TypeOf</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeOf([NotNull] AnalizadorLexicoParser.TypeOfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorLogico</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperadorLogico([NotNull] AnalizadorLexicoParser.OperadorLogicoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorLogico</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperadorLogico([NotNull] AnalizadorLexicoParser.OperadorLogicoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>expreParentesis</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpreParentesis([NotNull] AnalizadorLexicoParser.ExpreParentesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>expreParentesis</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpreParentesis([NotNull] AnalizadorLexicoParser.ExpreParentesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>idExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdExpresion([NotNull] AnalizadorLexicoParser.IdExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>idExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdExpresion([NotNull] AnalizadorLexicoParser.IdExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sliceAccess</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSliceAccess([NotNull] AnalizadorLexicoParser.SliceAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sliceAccess</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSliceAccess([NotNull] AnalizadorLexicoParser.SliceAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ejecutarFunciones</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEjecutarFunciones([NotNull] AnalizadorLexicoParser.EjecutarFuncionesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ejecutarFunciones</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEjecutarFunciones([NotNull] AnalizadorLexicoParser.EjecutarFuncionesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>strconvAtoi</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStrconvAtoi([NotNull] AnalizadorLexicoParser.StrconvAtoiContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>strconvAtoi</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStrconvAtoi([NotNull] AnalizadorLexicoParser.StrconvAtoiContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>matrizAccess</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMatrizAccess([NotNull] AnalizadorLexicoParser.MatrizAccessContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>matrizAccess</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMatrizAccess([NotNull] AnalizadorLexicoParser.MatrizAccessContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>stringsJoin</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringsJoin([NotNull] AnalizadorLexicoParser.StringsJoinContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>stringsJoin</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringsJoin([NotNull] AnalizadorLexicoParser.StringsJoinContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperadorNegacion([NotNull] AnalizadorLexicoParser.OperadorNegacionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorNegacion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperadorNegacion([NotNull] AnalizadorLexicoParser.OperadorNegacionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaracterExpresion([NotNull] AnalizadorLexicoParser.CaracterExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>caracterExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaracterExpresion([NotNull] AnalizadorLexicoParser.CaracterExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>decimalExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecimalExpresion([NotNull] AnalizadorLexicoParser.DecimalExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>decimalExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecimalExpresion([NotNull] AnalizadorLexicoParser.DecimalExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNilExpresion([NotNull] AnalizadorLexicoParser.NilExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>nilExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNilExpresion([NotNull] AnalizadorLexicoParser.NilExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sliceIndex</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSliceIndex([NotNull] AnalizadorLexicoParser.SliceIndexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sliceIndex</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSliceIndex([NotNull] AnalizadorLexicoParser.SliceIndexContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCadenaExpresion([NotNull] AnalizadorLexicoParser.CadenaExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>cadenaExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCadenaExpresion([NotNull] AnalizadorLexicoParser.CadenaExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>len</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLen([NotNull] AnalizadorLexicoParser.LenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>len</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLen([NotNull] AnalizadorLexicoParser.LenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>multiplicacionYdivision</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicacionYdivision([NotNull] AnalizadorLexicoParser.MultiplicacionYdivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multiplicacionYdivision</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicacionYdivision([NotNull] AnalizadorLexicoParser.MultiplicacionYdivisionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>intExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntExpresion([NotNull] AnalizadorLexicoParser.IntExpresionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intExpresion</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntExpresion([NotNull] AnalizadorLexicoParser.IntExpresionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorRelacional</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperadorRelacional([NotNull] AnalizadorLexicoParser.OperadorRelacionalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorRelacional</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperadorRelacional([NotNull] AnalizadorLexicoParser.OperadorRelacionalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>operadorNegativo</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperadorNegativo([NotNull] AnalizadorLexicoParser.OperadorNegativoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>operadorNegativo</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperadorNegativo([NotNull] AnalizadorLexicoParser.OperadorNegativoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>sumaYresta</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSumaYresta([NotNull] AnalizadorLexicoParser.SumaYrestaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>sumaYresta</c>
	/// labeled alternative in <see cref="AnalizadorLexicoParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSumaYresta([NotNull] AnalizadorLexicoParser.SumaYrestaContext context);
}
} // namespace Proyecto_1.AnalizadorLexico
